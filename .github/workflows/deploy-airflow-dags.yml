name: Deploy Airflow DAGs to Cloud Composer

on:
  push:
    branches: [ main ]
    paths:
      - '/**'
  workflow_dispatch:  # Allows manual triggering

env:
  # Direct parameters specified here instead of using secrets
  GCP_PROJECT_ID: "ox-wissp-devint"
  COMPOSER_ENVIRONMENT: "ox-wissp-devint"
  COMPOSER_LOCATION: "us-central1"
  # NOTE: For security reasons, you should NOT put the service account key directly in this file
  # The GCP_SA_KEY must still be stored as a GitHub secret

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest apache-airflow
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint DAGs
        run: |
          echo "Validating Airflow DAGs..."
          python -c "from airflow.models import DagBag; dag_bag = DagBag('./dags', include_examples=False); print(f'DAG parsing report: {dag_bag.dagbag_report()}')"
          if [ $? -ne 0 ]; then
            echo "DAG validation failed!"
            exit 1
          fi
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
      - name: Deploy DAGs to Cloud Composer
        run: |
          echo "Deploying DAGs to Cloud Composer environment: ${{ env.COMPOSER_ENVIRONMENT }} in ${{ env.COMPOSER_LOCATION }}"
          gcloud composer environments storage dags import \
            --environment ${{ env.COMPOSER_ENVIRONMENT }} \
            --location ${{ env.COMPOSER_LOCATION }} \
            --source / \
            --destination /
      - name: Verify deployment
        run: |
          echo "Verifying DAG deployment..."
          gcloud composer environments storage dags list \
            --environment ${{ env.COMPOSER_ENVIRONMENT }} \
            --location ${{ env.COMPOSER_LOCATION }}
